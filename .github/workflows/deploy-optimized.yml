name: Build and Deploy to Lightsail

on:
  push:
    branches: [main, master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Create deployment package
      run: |
        mkdir -p deploy-package
        cp -r dist/ deploy-package/
        cp package*.json deploy-package/
        cp Dockerfile.production deploy-package/
        cp docker-compose.production.yml deploy-package/
        cp *.traineddata deploy-package/ || true
        
    - name: Deploy to Lightsail
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USER }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          # Crear directorio temporal
          mkdir -p /tmp/billeo-deploy
          
    - name: Transfer files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USER }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        source: "deploy-package/*"
        target: "/tmp/billeo-deploy/"
        
    - name: Update application
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USER }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          cd /home/ubuntu/billeo-app
          
          # Parar aplicación actual
          sudo docker-compose -f docker-compose.production.yml down || true
          
          # Actualizar archivos
          cp -r /tmp/billeo-deploy/deploy-package/* .
          
          # Limpiar temporal
          rm -rf /tmp/billeo-deploy
          
          # Iniciar nueva versión
          sudo docker-compose -f docker-compose.production.yml up --build -d
          
          # Limpiar imágenes viejas
          sudo docker system prune -f 