name: Deploy Simple Debug

on:
  workflow_dispatch:

jobs:
  debug-deploy:
    name: Debug Deploy Step by Step
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            client/package-lock.json
      
      - name: Install root dependencies with retry
        run: |
          for i in {1..3}; do
            echo "Intento $i de instalación de dependencias raíz..."
            if npm ci --only=production --no-audit --prefer-offline; then
              echo "Instalación raíz exitosa"
              break
            else
              echo "Fallo en intento $i, esperando 30 segundos..."
              sleep 30
            fi
          done
      
      - name: Install client dependencies and build with retry
        run: |
          cd client
          for i in {1..3}; do
            echo "Intento $i de instalación de dependencias del cliente..."
            if npm ci --no-audit --prefer-offline; then
              echo "Instalación del cliente exitosa"
              break
            else
              echo "Fallo en intento $i, esperando 30 segundos..."
              sleep 30
            fi
          done
          npm run build
          cd ..
          echo "Build completed successfully"
      
      - name: Prepare simple package
        run: |
          mkdir -p deploy-simple
          cp -r server deploy-simple/
          cp -r shared deploy-simple/
          cp -r dist deploy-simple/
          cp package.json deploy-simple/
          cp tsconfig.json deploy-simple/
          jq '.scripts.start = "tsx server/index.ts"' deploy-simple/package.json > deploy-simple/package.json.tmp
          mv deploy-simple/package.json.tmp deploy-simple/package.json
          echo "Package prepared"
      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Step 1 - Stop PM2
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          echo "=== Stopping PM2 ==="
          ssh $SSH_USER@$SERVER_IP 'pm2 stop billeo || true'
          echo "PM2 stopped successfully"

      - name: Step 2 - Deploy files
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          echo "=== Deploying files ==="
          ssh $SSH_USER@$SERVER_IP 'mkdir -p /home/ubuntu/billeo-new && rm -rf /home/ubuntu/billeo-new/*'
          rsync -avz ./deploy-simple/ $SSH_USER@$SERVER_IP:/home/ubuntu/billeo-new/
          echo "Files deployed successfully"

      - name: Step 3 - Install tsx globally
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          echo "=== Installing tsx globally ==="
          ssh $SSH_USER@$SERVER_IP 'sudo npm install -g tsx || echo "tsx might already be installed"'
          echo "=== Installing local dependencies ==="
          ssh $SSH_USER@$SERVER_IP 'cd /home/ubuntu/billeo-new && npm install'
          echo "tsx installation completed"

      - name: Step 4 - Basic nginx config
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          echo "=== Configuring nginx ==="
          ssh $SSH_USER@$SERVER_IP 'echo "server { listen 80; location / { proxy_pass http://localhost:3000; } }" | sudo tee /etc/nginx/sites-available/default'
          ssh $SSH_USER@$SERVER_IP 'sudo systemctl reload nginx'
          echo "nginx configured successfully"

      - name: Step 5 - Start application
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          echo "=== Starting application ==="
          ssh $SSH_USER@$SERVER_IP 'cd /home/ubuntu/billeo-new && PORT=3000 NODE_ENV=production pm2 start npm --name billeo-new -- start'
          ssh $SSH_USER@$SERVER_IP 'pm2 status'
          echo "Application started successfully" 