name: Deploy to Lightsail (No Docker)

on:
  push:
    branches: [main, master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Create deployment package
      run: |
        mkdir -p deploy-package
        cp -r dist/ deploy-package/
        cp package.production.json deploy-package/package.json
        cp *.traineddata deploy-package/ || true
        cp -r uploads/ deploy-package/ || true
        cp database.db deploy-package/ || true
        
    - name: Transfer files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USER }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        source: "deploy-package/*"
        target: "/tmp/billeo-deploy/"
        
    - name: Deploy application
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.LIGHTSAIL_HOST }}
        username: ${{ secrets.LIGHTSAIL_USER }}
        key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
        script: |
          # Ir al directorio de la aplicación
          cd /home/ubuntu/billeo-app
          
          # Parar la aplicación actual
          pm2 stop billeo-app || true
          pm2 delete billeo-app || true
          
          # Backup de uploads y database si existen
          cp -r uploads uploads_backup 2>/dev/null || true
          cp database.db database_backup.db 2>/dev/null || true
          
          # Actualizar archivos desde temporal
          cp -r /tmp/billeo-deploy/deploy-package/* .
          
          # Restaurar uploads y database
          cp -r uploads_backup/* uploads/ 2>/dev/null || true
          cp database_backup.db database.db 2>/dev/null || true
          rm -rf uploads_backup database_backup.db 2>/dev/null || true
          
          # Limpiar temporal
          rm -rf /tmp/billeo-deploy
          
          # Instalar solo dependencias de producción mínimas
          npm install
          
          # Crear directorios necesarios
          mkdir -p uploads logs
          
          # Instalar PM2 si no está instalado
          sudo npm install -g pm2 || true
          
          # Iniciar la aplicación con PM2
          pm2 start dist/index.js --name billeo-app --env production
          
          # Guardar configuración PM2
          pm2 save
          pm2 startup | grep sudo | bash || true 