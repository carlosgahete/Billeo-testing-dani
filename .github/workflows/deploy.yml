name: Deploy to Lightsail

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build and Deploy to Lightsail
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install all dependencies
        run: npm ci
      
      - name: Build frontend only
        run: |
          # Build frontend
          cd client
          npm ci
          npm run build
          cd ..
          
          # Build backend NO - dejamos el servidor como está
          npm run build
          
          # Verificar que el frontend está compilado
          ls -la dist/public/
      
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile=/dev/null" >> ~/.ssh/config
      
      - name: Deploy to server
        run: |
          # Crear directorio
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} 'mkdir -p /home/ubuntu/billeo'
          
          # Subir todo el código del servidor + frontend compilado
          rsync -avz --exclude 'node_modules' --exclude '.git' --exclude 'client/node_modules' --exclude 'client/dist' . ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/home/ubuntu/billeo/
      
      - name: Fix nginx configuration
        run: |
          # Configurar nginx para puerto 3000 (donde realmente corre la app)
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} 'sudo tee /etc/nginx/sites-available/default > /dev/null <<EOF
          server {
              listen 80;
              server_name _;
              
              location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
                  proxy_cache_bypass \$http_upgrade;
              }
          }
          EOF'
          
          # Reiniciar nginx
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} 'sudo systemctl reload nginx'
      
      - name: Install production dependencies and start app
        run: |
          # Instalar dependencias de producción (más rápido que todas)
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} 'cd /home/ubuntu/billeo && npm install --production'
          
          # Instalar tsx globalmente si no está
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} 'npm install -g tsx'
          
          # Iniciar aplicación con tsx (como en desarrollo pero production)
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} 'cd /home/ubuntu/billeo && pm2 restart billeo || pm2 start npm --name billeo -- start' 