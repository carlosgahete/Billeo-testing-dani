Perfecto, entendido:
Primero entras como Superadmin, eliges el cliente, y luego ya ves su “Libro de registros”, no al revés.
Muy buena aclaración, importantísima para que tu IA lo haga como tú quieres.

Ahora voy a sumarlo todo en un único documento de instrucciones súper claras, como si fuera un “briefing” completo para tu IA, actualizado con todo lo que hemos hablado.

Aquí va:

⸻

Instrucciones completas para la IA — Libro de registros en el Superadmin

1. Concepto general

Estamos creando un software de gestión para autónomos y empresas.
Dentro del panel Superadmin (usuario con control total), vamos a añadir una nueva sección llamada “Libro de registros”.

El Libro de registros es una herramienta contable donde se deben ver los ingresos, gastos y bienes de inversión de los clientes de forma organizada y editable.

El estilo debe ser minimalista, moderno y limpio (como Apple).

⸻

2. Flujo de navegación

Muy importante:
	•	Primero el Superadmin selecciona un cliente desde el panel principal de Superadmin.
	•	Después, dentro del perfil de ese cliente, accede a la opción “Libro de registros” en el sidebar.
	•	Así el Libro de registros siempre está viendo los datos de un cliente ya seleccionado.

⸻

3. Funciones del Libro de registros

a) Nueva entrada en el sidebar
	•	Crear una nueva entrada en el sidebar llamada “Libro de registros”.
	•	Esta opción sólo aparece cuando ya se ha seleccionado un cliente.

b) Vista principal del Libro de registros

La pantalla debe estar dividida en:

1. Selector de Tipo de Libro
	•	Mostrar pestañas o botones para cambiar entre:
	•	Ingresos
	•	Gastos
	•	Bienes de Inversión

2. Tabla de Registros
	•	Mostrar los registros correspondientes en una tabla con las siguientes columnas:

| Fecha | Nº Factura | Cliente/Proveedor | Concepto | Base Imponible | IVA % | Cuota IVA | Total Factura | Opciones |
	•	Opciones:
	•	Editar (abre un formulario modal para modificar el registro).
	•	Eliminar (confirma antes de borrar).

3. Botones de Acción
	•	Añadir nuevo registro: abre un modal para introducir manualmente nuevos registros.
	•	Descargar PDF: genera un informe en PDF de la tabla actual.
	•	Descargar XLS: genera un archivo Excel de la tabla actual.

⸻

4. Funcionalidad de añadir y editar registros

Cuando se pulse Añadir nuevo registro o Editar:
	•	Abrir un modal con el siguiente formulario:

Campo	Tipo de Input
Fecha	Input tipo fecha
Nº de Factura	Input tipo texto
Cliente/Proveedor	Input tipo texto
Concepto	Input tipo texto
Base Imponible	Input tipo número (2 decimales)
IVA %	Input tipo número (por ejemplo: 21, 10, 4)
Cuota IVA	Input tipo número (calculable automáticamente)
Total Factura	Input tipo número (calculable automáticamente)

Notas de cálculo automático:
	•	cuota_iva = base_imponible × (iva_porcentaje ÷ 100)
	•	total_factura = base_imponible + cuota_iva

Importante: Permitir editar los cálculos si el gestor quiere introducir manualmente otros valores.

⸻

5. Exportar registros (Descargar archivos)

Implementar dos botones extra:

Botón	Acción
Descargar PDF	Usar librería jspdf + jspdf-autotable. Generar un PDF bonito con los datos de la tabla actual (cliente y tipo seleccionados).
Descargar XLS	Usar librería SheetJS (xlsx). Generar un archivo Excel o CSV exportando sólo los datos mostrados en pantalla.

Características de la exportación:
	•	Incluir nombre del cliente.
	•	Incluir tipo de libro (Ingresos, Gastos, Bienes).
	•	Incluir fecha de generación del informe.
	•	Los archivos sólo deben contener los datos visibles del cliente actual y el tipo de libro actual.

⸻

6. Base de datos

Crear una tabla en la base de datos llamada libro_registros.

Estructura sugerida:

CREATE TABLE libro_registros (
  id INT PRIMARY KEY AUTO_INCREMENT,
  cliente_id INT NOT NULL,
  tipo VARCHAR(50) NOT NULL, -- ('ingreso', 'gasto', 'bien_inversion')
  fecha DATE NOT NULL,
  numero_factura VARCHAR(255),
  cliente_proveedor VARCHAR(255),
  concepto TEXT,
  base_imponible DECIMAL(10,2),
  iva_porcentaje DECIMAL(5,2),
  cuota_iva DECIMAL(10,2),
  total_factura DECIMAL(10,2),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);



⸻

7. Reglas clave
	•	No cargar todos los registros de todos los clientes: siempre trabajar sólo con el cliente actualmente seleccionado.
	•	Los datos deben actualizarse dinámicamente al cambiar entre Ingresos/Gastos/Bienes.
	•	Los formularios deben tener validación de campos obligatorios.
	•	El sistema debe ser rápido y fluido: evitar recargar toda la página (usar fetch o similar si hace falta).

⸻

Fin del documento de instrucciones

⸻

¿Quieres que también te monte un ejemplo en código real de cómo sería el HTML+JS de esta vista?
Así tu IA podría copiarlo y entenderlo aún mejor.
¿Te lo hago? (Tardaría unos minutos, pero quedaría profesional de verdad). ¿Te gustaría?