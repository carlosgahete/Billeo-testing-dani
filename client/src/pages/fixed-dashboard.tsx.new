import React, { useState } from "react";
import { useQuery } from "@tanstack/react-query";
import { BarChart3, FileText, ArrowUp, ArrowDown, Wallet } from "lucide-react";
import { useLocation } from "wouter";
import { PageTitle } from "@/components/ui/page-title";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Loader2 } from "lucide-react";
import { DashboardStats } from "@/types/dashboard";
import { formatCurrency } from "@/lib/utils";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";

// Dashboard con layout fijo
const FixedDashboard = () => {
  const [, navigate] = useLocation();
  const [year, setYear] = useState("2025");
  const [period, setPeriod] = useState("all");
  
  const { data: user, isLoading: userLoading } = useQuery<any>({
    queryKey: ["/api/auth/session"],
  });
  
  const { data: stats, isLoading: statsLoading } = useQuery<DashboardStats>({
    queryKey: ["/api/stats/dashboard", { year, period }],
    queryFn: async () => {
      // Añadir un timestamp y encabezados no-cache para garantizar datos frescos siempre
      const timestamp = Date.now();
      const res = await fetch(`/api/stats/dashboard?year=${year}&period=${period}&nocache=${timestamp}`, {
        headers: {
          'Cache-Control': 'no-cache, no-store, must-revalidate',
          'Pragma': 'no-cache',
          'Expires': '0'
        }
      });
      if (!res.ok) throw new Error("Error al cargar estadísticas");
      return res.json();
    },
    refetchOnWindowFocus: true,
    refetchOnMount: "always", // Siempre recarga al montar el componente
    refetchOnReconnect: true,
    staleTime: 0, // Considerar los datos obsoletos inmediatamente
    gcTime: 0, // No almacenar en caché
  });
  
  // Define un objeto de stats predeterminado que cumpla con la interfaz DashboardStats
  const defaultStats: DashboardStats = {
    income: 0,
    expenses: 0,
    pendingInvoices: 0,
    pendingCount: 0,
    pendingQuotes: 0,
    pendingQuotesCount: 0,
    taxes: {
      vat: 0,
      incomeTax: 0,
      ivaALiquidar: 0
    }
  };

  // El objeto de estadísticas que vamos a usar (el real o el predeterminado)
  const dashboardStats = stats || defaultStats;

  // Loading state
  if (userLoading || statsLoading) {
    return (
      <div className="flex justify-center items-center h-[calc(100vh-200px)]">
        <Loader2 className="h-8 w-8 animate-spin text-primary-600" />
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="flex flex-col gap-2 mt-4">
        <PageTitle 
          title="Dashboard"
          description="Tu panel de control financiero"
          variant="gradient"
          className="w-full overflow-visible"
        />
      </div>
      
      {/* Filtros para el dashboard */}
      <div className="flex items-center justify-between space-x-2 bg-gray-50 p-3 rounded-lg">
        <div className="font-medium">Filtrar por:</div>
        <div className="flex items-center space-x-2">
          <Select value={year} onValueChange={setYear}>
            <SelectTrigger className="w-[120px]">
              <SelectValue placeholder="Año" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="2025">2025</SelectItem>
              <SelectItem value="2024">2024</SelectItem>
              <SelectItem value="2023">2023</SelectItem>
            </SelectContent>
          </Select>
          
          <Select value={period} onValueChange={setPeriod}>
            <SelectTrigger className="w-[150px]">
              <SelectValue placeholder="Periodo" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="all">Todo el año</SelectItem>
              <SelectItem value="Q1">Trimestre 1</SelectItem>
              <SelectItem value="Q2">Trimestre 2</SelectItem>
              <SelectItem value="Q3">Trimestre 3</SelectItem>
              <SelectItem value="Q4">Trimestre 4</SelectItem>
            </SelectContent>
          </Select>
        </div>
      </div>
      
      {/* Bloques principales: Ingresos, Gastos y Resultado Final */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <Card className="bg-gradient-to-tr from-blue-50 to-white p-4">
          <div className="flex items-center justify-between mb-2">
            <div className="flex items-center">
              <ArrowUp className="h-5 w-5 text-green-600 mr-2" />
              <h3 className="text-lg font-medium">Ingresos</h3>
            </div>
            <Button variant="ghost" size="sm" className="h-8 w-8 p-0">
              <span className="sr-only">Opciones</span>
              <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M7.5 8.5C8.05228 8.5 8.5 8.05228 8.5 7.5C8.5 6.94772 8.05228 6.5 7.5 6.5C6.94772 6.5 6.5 6.94772 6.5 7.5C6.5 8.05228 6.94772 8.5 7.5 8.5Z" fill="currentColor"></path>
              </svg>
            </Button>
          </div>
          
          <div className="mb-2">
            <div className="text-3xl font-bold text-green-700">{formatCurrency(dashboardStats.income)}</div>
          </div>
          
          <div className="grid grid-cols-2 gap-2 text-sm">
            <div>
              <div className="text-muted-foreground">Total facturado:</div>
              <div className="font-medium">{formatCurrency(dashboardStats.income)}</div>
            </div>
            <div>
              <div className="text-muted-foreground">IVA a liquidar:</div>
              <div className="font-medium">{formatCurrency(dashboardStats.taxes?.ivaALiquidar || 0)}</div>
            </div>
          </div>
          
          <div className="mt-4 grid grid-cols-1 gap-2">
            <Button variant="outline" className="w-full" size="sm">Ver facturas</Button>
            <Button variant="outline" className="w-full" size="sm">Ver ingresos</Button>
          </div>
        </Card>
        
        <Card className="bg-gradient-to-tr from-red-50 to-white p-4">
          <div className="flex items-center justify-between mb-2">
            <div className="flex items-center">
              <ArrowDown className="h-5 w-5 text-red-600 mr-2" />
              <h3 className="text-lg font-medium">Gastos</h3>
            </div>
            <Button variant="ghost" size="sm" className="h-8 w-8 p-0">
              <span className="sr-only">Opciones</span>
              <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M7.5 8.5C8.05228 8.5 8.5 8.05228 8.5 7.5C8.5 6.94772 8.05228 6.5 7.5 6.5C6.94772 6.5 6.5 6.94772 6.5 7.5C6.5 8.05228 6.94772 8.5 7.5 8.5Z" fill="currentColor"></path>
              </svg>
            </Button>
          </div>
          
          <div className="mb-2">
            <div className="text-3xl font-bold text-red-700">{formatCurrency(dashboardStats.expenses)}</div>
          </div>
          
          <div className="grid grid-cols-2 gap-2 text-sm">
            <div>
              <div className="text-muted-foreground">Base imponible:</div>
              <div className="font-medium">{formatCurrency(dashboardStats.baseImponible || dashboardStats.expenses)}</div>
            </div>
            <div>
              <div className="text-muted-foreground">IVA soportado:</div>
              <div className="font-medium">{formatCurrency(dashboardStats.ivaSoportado || 0)}</div>
            </div>
          </div>
          
          <div className="mt-4">
            <Button variant="outline" className="w-full" size="sm">Ver gastos</Button>
          </div>
        </Card>
        
        <Card className="bg-gradient-to-tr from-green-50 to-white p-4">
          <div className="flex items-center justify-between mb-2">
            <div className="flex items-center">
              <Wallet className="h-5 w-5 text-indigo-600 mr-2" />
              <h3 className="text-lg font-medium">Resultado Final</h3>
            </div>
            <Button variant="ghost" size="sm" className="h-8 w-8 p-0">
              <span className="sr-only">Opciones</span>
              <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M7.5 8.5C8.05228 8.5 8.5 8.05228 8.5 7.5C8.5 6.94772 8.05228 6.5 7.5 6.5C6.94772 6.5 6.5 6.94772 6.5 7.5C6.5 8.05228 6.94772 8.5 7.5 8.5Z" fill="currentColor"></path>
              </svg>
            </Button>
          </div>
          
          <div className="mb-2">
            <div className="text-3xl font-bold text-indigo-700">{formatCurrency(dashboardStats.income - dashboardStats.expenses)}</div>
          </div>
          
          <div className="grid grid-cols-2 gap-2 text-sm">
            <div>
              <div className="text-muted-foreground">Base + IVA (bruto):</div>
              <div className="font-medium">{formatCurrency(dashboardStats.income)}</div>
            </div>
            <div>
              <div className="text-muted-foreground">IRPF retenido:</div>
              <div className="font-medium">- {formatCurrency(dashboardStats.irpfRetenidoIngresos || 0)}</div>
            </div>
          </div>
          
          <div className="mt-4">
            <Button variant="outline" className="w-full" size="sm">Ver informes</Button>
          </div>
        </Card>
      </div>
      
      {/* Segunda fila: Resumen Fiscal y Comparativa */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
        {/* Bloque de Resumen Fiscal */}
        <Card className="p-4">
          <div className="flex items-center justify-between mb-2">
            <div className="flex items-center">
              <FileText className="h-5 w-5 text-blue-600 mr-2" />
              <h3 className="text-lg font-medium">Resumen Fiscal</h3>
            </div>
            <Button variant="ghost" size="sm" className="h-8 w-8 p-0">
              <span className="sr-only">Opciones</span>
              <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M7.5 8.5C8.05228 8.5 8.5 8.05228 8.5 7.5C8.5 6.94772 8.05228 6.5 7.5 6.5C6.94772 6.5 6.5 6.94772 6.5 7.5C6.5 8.05228 6.94772 8.5 7.5 8.5Z" fill="currentColor"></path>
              </svg>
            </Button>
          </div>
          
          <div className="flex gap-2 mb-4">
            <Select value={year} onValueChange={setYear}>
              <SelectTrigger className="w-[120px]">
                <SelectValue placeholder="Año" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="2025">2025</SelectItem>
                <SelectItem value="2024">2024</SelectItem>
                <SelectItem value="2023">2023</SelectItem>
              </SelectContent>
            </Select>
            
            <Select value={period} onValueChange={setPeriod}>
              <SelectTrigger className="w-[150px]">
                <SelectValue placeholder="Periodo" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">Todo el año</SelectItem>
                <SelectItem value="Q1">Trimestre 1</SelectItem>
                <SelectItem value="Q2">Trimestre 2</SelectItem>
                <SelectItem value="Q3">Trimestre 3</SelectItem>
                <SelectItem value="Q4">Trimestre 4</SelectItem>
              </SelectContent>
            </Select>
          </div>
          
          <div className="bg-blue-50 rounded-lg p-3 mb-3">
            <div className="flex justify-between items-center mb-1">
              <div className="flex items-center">
                <div className="bg-blue-100 rounded p-1 mr-2">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M20 9H4V7h16v2zm0 4H4v-2h16v2zm0 4H4v-2h16v2z" fill="currentColor"/>
                  </svg>
                </div>
                <span className="font-medium">IVA a liquidar (Todo el año, {year})</span>
              </div>
              <span className="text-blue-800 font-bold">{formatCurrency(dashboardStats.taxes?.ivaALiquidar || 0)}</span>
            </div>
            <div className="text-xs text-muted-foreground">Resumen anual de IVA (modelo 390)</div>
            <div className="flex items-center mt-2 text-xs">
              <div className="bg-blue-200 text-xs rounded px-1">
                <span>Resultado de restar (IVA soportado - IVA repercutido)</span>
              </div>
            </div>
          </div>
          
          <div className="bg-amber-50 rounded-lg p-3">
            <div className="flex justify-between items-center mb-1">
              <div className="flex items-center">
                <div className="bg-amber-100 rounded p-1 mr-2">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M20 9H4V7h16v2zm0 4H4v-2h16v2zm0 4H4v-2h16v2z" fill="currentColor"/>
                  </svg>
                </div>
                <span className="font-medium">IRPF retenido en gastos (Todo el año, {year})</span>
              </div>
              <span className="text-amber-800 font-bold">{formatCurrency(dashboardStats.irpfRetenidoIngresos || 0)}</span>
            </div>
            <div className="text-xs text-muted-foreground mb-1">15% IRPF</div>
          </div>
        </Card>
        
        {/* Bloque de Comparativa Financiera */}
        <Card className="p-4">
          <div className="flex items-center justify-between mb-4">
            <div className="flex items-center">
              <BarChart3 className="h-5 w-5 text-purple-600 mr-2" />
              <h3 className="text-lg font-medium">Comparativa Financiera</h3>
            </div>
            <div className="flex gap-2">
              <Select defaultValue="trimestral">
                <SelectTrigger className="w-[120px]">
                  <SelectValue placeholder="Trimestral" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="trimestral">Trimestral</SelectItem>
                  <SelectItem value="mensual">Mensual</SelectItem>
                  <SelectItem value="anual">Anual</SelectItem>
                </SelectContent>
              </Select>
              
              <Button variant="ghost" size="sm" className="h-8 w-8 p-0">
                <span className="sr-only">Opciones</span>
                <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7.5 8.5C8.05228 8.5 8.5 8.05228 8.5 7.5C8.5 6.94772 8.05228 6.5 7.5 6.5C6.94772 6.5 6.5 6.94772 6.5 7.5C6.5 8.05228 6.94772 8.5 7.5 8.5Z" fill="currentColor"></path>
                </svg>
              </Button>
            </div>
          </div>
          
          <div className="h-[180px] mb-4 flex items-end justify-around">
            <div className="flex flex-col items-center">
              <div className="bg-green-400 w-[60px] h-[120px] rounded-t-md"></div>
              <div className="text-xs mt-1">Q1</div>
            </div>
            <div className="flex flex-col items-center">
              <div className="bg-purple-400 w-[60px] h-[160px] rounded-t-md"></div>
              <div className="text-xs mt-1">Q2</div>
            </div>
            <div className="flex flex-col items-center">
              <div className="opacity-30 bg-gray-400 w-[60px] h-[80px] rounded-t-md"></div>
              <div className="text-xs mt-1">Q3</div>
            </div>
            <div className="flex flex-col items-center">
              <div className="opacity-30 bg-gray-400 w-[60px] h-[40px] rounded-t-md"></div>
              <div className="text-xs mt-1">Q4</div>
            </div>
          </div>
          
          <div className="flex gap-4 justify-center">
            <Button variant="outline" size="sm" className="px-4">Barras</Button>
            <Button variant="outline" size="sm" className="px-4">Área</Button>
          </div>
        </Card>
      </div>
    </div>
  );
};

export default FixedDashboard;