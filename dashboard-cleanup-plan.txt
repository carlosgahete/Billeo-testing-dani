# Plan de limpieza total del Dashboard

## 1. Archivos a mantener (estructura base)
- client/src/pages/complete-dashboard.tsx (rediseñar)
- client/src/components/dashboard/CompleteDashboard.tsx (recrear desde cero)
- client/src/types/dashboard.ts (simplificar)
- client/src/hooks/useDashboardData.ts (limpiar)

## 2. Archivos a eliminar (dashboards redundantes)
- client/src/components/dashboard/AppleStyleDashboard.tsx
- client/src/components/dashboard/blocks/PreviewDashboard.tsx
- client/src/components/dashboard/CustomizableDashboard.tsx
- client/src/components/dashboard/DashboardBlockMenu.tsx
- client/src/components/dashboard/EmptyDashboard.tsx
- client/src/components/dashboard/temp-dashboard-fixes.tsx
- client/src/pages/apple-dashboard.tsx
- client/src/pages/dashboard.tsx.backup
- client/src/pages/dashboard.tsx.old
- client/src/pages/empty-dashboard.tsx
- client/src/pages/fixed-dashboard.tsx
- client/src/pages/fixed-dashboard.tsx.new

## 3. Widgets a eliminar (ya no se usarán)
- client/src/components/dashboard/AppleStyleWidgets/ (carpeta completa)
- client/src/components/dashboard/SortableWidget.tsx
- client/src/config/widgetSizes.ts
- client/src/config/dashboardBlocks.tsx
- client/src/config/dashboardSizes.ts

## 4. Enfoque para reconstruir el dashboard
1. Simplificar tipos en dashboard.ts, dejando solo lo esencial
2. Recrear CompleteDashboard.tsx desde cero, con un diseño limpio
3. Mantener solo los tipos y funciones necesarias en useDashboardData.ts
4. Asegurar que la lógica de cálculo y visualización sea clara 
5. Establecer patrón consistente y único para obtener datos del backend

## 5. Objetivo final
- Una única implementación de dashboard limpia y mantenible
- Mostrar correctamente los valores financieros (1060.00€)
- Eliminar toda la lógica de widgets personalizables
- Utilizar un diseño más sencillo y directo